{"version":3,"sources":["components/header/header.js","services/serviceGOT.js","components/spinner/spinner.js","components/error/error.js","components/randomChar/randomChar.js","components/itemList/itemList.js","components/itemDetails/itemDetails.js","components/rowBlock/rowBlock.js","components/pages/characterPage.js","components/pages/housePage.js","components/pages/bookPage.js","components/pages/booksItemPage.js","components/app/app.js","index.js"],"names":["Header","class","className","to","serviceGOT","getResource","url","a","fetch","_apiBase","res","console","log","ok","Error","status","json","getAllBooks","map","book","_transformBook","getBook","id","getAllCharacters","char","_transformCharacter","getCharacter","getAllHouses","house","_transformHouse","getHouse","checkEmptyStr","value","Array","isArray","length","getId","match","this","name","gender","born","died","culture","region","words","titles","overlord","ancestralWeapons","numberOfPages","publiser","publisher","released","Spinner","ErrorMessage","src","RandomChar","state","loading","error","gotService","onError","setState","updateChar","Math","floor","random","then","catch","timerId","setInterval","props","interval","clearInterval","content","Component","defaultProps","View","Fragment","ItemList","itemKey","arr","item","label","renderItem","onClick","onItemSelected","data","items","renderItems","withData","getData","React","Field","field","ItemDetails","updateItem","prevProps","itemId","Children","children","child","cloneElement","RowBlock","left","right","CharacterPage","selectedChar","itemList","charDetails","HousePage","selectedHouse","houseDetails","BookPage","history","push","withRouter","BooksItem","App","randomChar","onToggleRandomChar","component","path","exact","render","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e04d0402.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div class=\"header d-flex justify-content-between align-items-center\">\r\n      <h3 className=\"header-title\">\r\n        <Link to=\"/\">Game of Thrones DB</Link>\r\n      </h3>\r\n      <ul className=\"header-list d-flex align-items-center\">\r\n        <li>\r\n          <Link to=\"/characters\">Characters</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/houses\">Houses</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/books\">Books</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default class serviceGOT {\r\n  constructor() {\r\n    this._apiBase = 'https://www.anapioficeandfire.com/api';\r\n  }\r\n\r\n  getResource = async (url) => {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    console.log(res);\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}` +\r\n        `, received ${res.status}`);\r\n    }\r\n    return await res.json();\r\n  }\r\n\r\n  getAllBooks = async () => {\r\n    const res = await this.getResource(`/books/`);\r\n\r\n    return res.map(book => this._transformBook(book));\r\n  }\r\n  \r\n   getBook = async (id) => {\r\n    const book = await this.getResource(`/books/${id}/`);\r\n    return this._transformBook(book);\r\n  }\r\n  \r\n   getAllCharacters = async () => {\r\n    const res = await this.getResource(`/characters?page=5&pageSize=10`);\r\n\r\n    return res.map(char => this._transformCharacter(char));\r\n  }\r\n  \r\n  getCharacter = async (id) => {\r\n    const char = await this.getResource(`/characters/${id}`);\r\n    return this._transformCharacter(char);\r\n  }\r\n  \r\n  getAllHouses = async () => {\r\n    const res = await this.getResource(`/houses/`);\r\n\r\n    return res.map(house => this._transformHouse(house));\r\n  }\r\n  \r\n  getHouse = async (id) => {\r\n    const house = await this.getResource(`/houses/${id}`);\r\n    return this._transformHouse(house);\r\n  }\r\n\r\n  checkEmptyStr = (value) => {\r\n    if ( Array.isArray(value) ) {\r\n      if (value[0].length === 0) {\r\n        return \"no data :)\"\r\n      }\r\n    } else if (value.length === 0) {\r\n      return \"no data :)\"\r\n    } else {\r\n      return value\r\n    }\r\n  }\r\n\r\n  getId = (url) => {\r\n    return url.match(/\\d+$/)[0]\r\n  }\r\n\r\n  _transformCharacter(char) {\r\n    return {\r\n      name: this.checkEmptyStr(char.name),\r\n      gender: this.checkEmptyStr(char.gender),\r\n      born: this.checkEmptyStr(char.born),\r\n      died: this.checkEmptyStr(char.died),\r\n      culture: this.checkEmptyStr(char.culture),\r\n      id: this.getId(char.url)\r\n    }\r\n  }\r\n\r\n  _transformHouse(house) {\r\n    console.log(house);\r\n    return {\r\n      name: this.checkEmptyStr(house.name),\r\n      region: this.checkEmptyStr(house.region),\r\n      words: this.checkEmptyStr(house.words),\r\n      titles: this.checkEmptyStr(house.titles),\r\n      overlord: this.checkEmptyStr(house.overlord),\r\n      ancestralWeapons: this.checkEmptyStr(house.ancestralWeapons),\r\n      id: this.getId(house.url)\r\n    }\r\n  }\r\n\r\n  _transformBook(book) {\r\n    return {\r\n      name: this.checkEmptyStr(book.name),\r\n      numberOfPages: this.checkEmptyStr(book.numberOfPages),\r\n      publiser: this.checkEmptyStr(book.publisher),\r\n      released: this.checkEmptyStr(book.released),\r\n      id: this.getId(book.url)\r\n    }\r\n  }\r\n}","import './spinner.css'\r\n\r\nconst Spinner = () => \r\n<div className=\"spinner\">\r\n  <div class=\"loadingio-spinner-spin-rhuby3ny6t8\"><div class=\"ldio-8n94tc8r7\">\r\n  <div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div>\r\n  </div></div>\r\n</div>\r\nexport default Spinner;  ","import React from 'react';\r\nimport './error.css'\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <div className=\"error\">\r\n      <img src={process.env.PUBLIC_URL + '/img/warning.svg'}></img>\r\n      <span>Something goes wrong</span>\r\n    </div>  \r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import React, { Component} from \"react\";\r\nimport serviceGOT from \"../../services/serviceGOT\";\r\nimport Spinner from \"../spinner/spinner\";\r\nimport ErrorMessage from \"../error/error\";\r\n\r\nimport \"./randomChar.css\";\r\nexport default class RandomChar extends Component {\r\n\r\n  state = {\r\n    char: {},\r\n    loading: true,\r\n    error: false\r\n  }  \r\n\r\n  gotService = new serviceGOT(); \r\n\r\n  componentDidMount() {\r\n    this.updateChar();\r\n    this.timerId = setInterval(() => this.updateChar(), this.props.interval)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerId)\r\n  }\r\n  \r\n  static defaultProps = {\r\n    interval: 5000\r\n  }\r\n  \r\n  static propTypes = {\r\n    interval: (props, propName, componentName) => {\r\n      const value = props[propName];\r\n      \r\n      if (typeof value ==='number' && !isNaN(value)) {\r\n        return null\r\n      }\r\n      return new TypeError(`${componentName}: ${propName} must to be a number`)\r\n    }\r\n  }   \r\n\r\n  onError = () => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  updateChar = () => {\r\n    console.log(\"update\");\r\n    const id = Math.floor(Math.random()*140 + 25);\r\n    this.gotService.getCharacter(id)\r\n      .then((char) => {\r\n        this.setState({\r\n          char,\r\n          loading: false\r\n        })\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        this.onError();\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { char, loading, error } = this.state;\r\n    const content = (loading) ? <Spinner/> : (error) ? <ErrorMessage/> : <View char={char}/> \r\n\r\n    return (\r\n      <div className=\"random-block rounded mb-4\">\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst View = ({char}) => {\r\n  const {name, gender, born, died, culture} = char;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h4>{name}</h4>\r\n      <ul className=\"list-group list-group-flush\">\r\n        <li className=\"list-group-item d-flex justify-content-between\">\r\n          <span className=\"term\">Gender</span>\r\n          <span>{gender}</span>\r\n        </li>\r\n        <li className=\"list-group-item d-flex justify-content-between\">\r\n          <span className=\"term\">Born</span>\r\n          <span>{born}</span>\r\n        </li>\r\n        <li className=\"list-group-item d-flex justify-content-between\">\r\n          <span className=\"term\">Died</span>\r\n          <span>{died}</span>\r\n        </li>\r\n        <li className=\"list-group-item d-flex justify-content-between\">\r\n          <span className=\"term\">Culture</span>\r\n          <span>{culture}</span>\r\n        </li>\r\n      </ul>\r\n    </React.Fragment>\r\n  )\r\n}  \r\n\r\n// const RandomChar = ({interval}) => {\r\n//   const [char, setChar] = useState({});\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(false);\r\n  \r\n//   const gotService = new serviceGOT(); \r\n\r\n//   const onError = () => {\r\n//     setError(true);\r\n//     setLoading(false);\r\n//   }\r\n\r\n//   const updateChar = () => {\r\n//     console.log(\"update\");\r\n//     const id = Math.floor(Math.random()*140 + 25);\r\n//     gotService.getCharacter(id)\r\n//       .then((char) => {\r\n//         setChar(char);\r\n//         setLoading(false);\r\n//       })\r\n//       .catch(error => {\r\n//         console.log(error);\r\n//         onError();\r\n//       })  \r\n//   }\r\n \r\n//   useEffect(() => {\r\n//     const timer = setInterval(() => updateChar(), interval)\r\n//     return () => clearInterval(timer);\r\n//   });\r\n\r\n//   const content = (loading) ? <Spinner/> : (error) ? <ErrorMessage/> : <View char={char}/> \r\n\r\n//   return (\r\n//     <div className=\"random-block rounded mb-4\">\r\n//       {content}\r\n//     </div>\r\n//   )\r\n// }\r\n// export default RandomChar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n ","import React, { Component } from \"react\";\r\nimport Spinner from \"../spinner/spinner\";\r\nimport \"./itemList.css\";\r\n\r\nclass ItemList extends Component {\r\n  itemKey = 0;\r\n  \r\n  renderItems(arr) {\r\n    return arr.map((item) => {\r\n      const label = this.props.renderItem(item);\r\n      return (\r\n        <li \r\n          className=\"list-group-item\" \r\n          key={++this.itemKey}\r\n          onClick={() => {this.props.onItemSelected(item.id)}}>\r\n            {label}\r\n        </li>\r\n      )   \r\n    })\r\n  }\r\n\r\n  render() {\r\n    const data = this.props.data\r\n    const items = this.renderItems(data)\r\n\r\n    return (\r\n      <ul className=\"item-list list-group\">\r\n        {items}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nconst withData = (View) => {\r\n  return class extends React.Component {\r\n    state = {\r\n      data: null\r\n    }\r\n  \r\n    componentDidMount() {\r\n      const {getData} = this.props;\r\n  \r\n      getData()\r\n      .then((data) => {\r\n        this.setState({\r\n          data\r\n        })\r\n      })\r\n    }\r\n  \r\n    render() {\r\n      const {data} = this.state;\r\n    \r\n      if (!data) {\r\n        return <Spinner/>\r\n      }\r\n\r\n      return <View {...this.props} data={data}/>\r\n    }\r\n  }\r\n}\r\n\r\nexport default withData(ItemList);","import React, { Component } from \"react\";\r\n\r\nimport \"./itemDetails.css\";\r\n\r\nconst Field = ({item, field, label}) => {\r\n  return (\r\n    <li className=\"list-group-item d-flex justify-content-between\">\r\n      <span className=\"term\">{label}</span>\r\n      <span>{item[field]}</span>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport {Field}\r\n\r\nexport default class ItemDetails extends Component {\r\n  \r\n  state={\r\n    item: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateItem();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.itemId !== this.props.itemId) {\r\n      this.updateItem();\r\n    }\r\n  }\r\n\r\n  updateItem() {\r\n    const {itemId, getData} = this.props;\r\n    if (!itemId) {\r\n      return;\r\n    }\r\n    console.log(\"запрос\");\r\n    getData(itemId)\r\n      .then((item) => {\r\n        console.log(item);\r\n        this.setState({item})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {item} = this.state\r\n\r\n    if (!item) {\r\n      return <span className=\"select-error\">Please select a character</span>\r\n    }\r\n\r\n    const {name} = item;\r\n\r\n    return (\r\n      <div className=\"char-details rounded\">\r\n        <h4>{name}</h4>\r\n        <ul className=\"list-group list-group-flush\">\r\n          {\r\n            React.Children.map(this.props.children, (child) => {\r\n              return React.cloneElement(child, {item})\r\n            })\r\n          }\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst RowBlock = ({left, right}) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-6\">\r\n        {left}\r\n      </div>\r\n      <div className=\"col-md-6\" >\r\n        {right}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RowBlock;\r\n","import React from 'react';\r\nimport ItemList from '../itemList/itemList';\r\nimport ItemDetails, { Field } from '../itemDetails/itemDetails';\r\nimport ErrorMessage from '../error/error';\r\nimport serviceGOT from '../../services/serviceGOT';\r\nimport RowBlock from '../rowBlock/rowBlock';\r\n\r\nexport default class CharacterPage extends React.Component {\r\n\r\n  state = {\r\n    selectedChar: null,\r\n    error: false\r\n  }\r\n\r\n  gotService = new serviceGOT();\r\n\r\n  onItemSelected = (id) => {\r\n    this.setState({\r\n      selectedChar: id\r\n    })\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({error: true})\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.error) {\r\n      return <ErrorMessage/>\r\n    }\r\n\r\n    const itemList = (\r\n      <ItemList \r\n        onItemSelected={this.onItemSelected}\r\n        getData={this.gotService.getAllCharacters}\r\n        renderItem={({name, gender}) => { return `${name} ${gender}`}}/>\r\n    );\r\n\r\n    const charDetails = (\r\n      <ItemDetails \r\n        itemId={this.state.selectedChar}\r\n        getData={this.gotService.getCharacter}>\r\n          <Field field='gender' label='Gender'/>\r\n          <Field field='born' label='Born'/>\r\n          <Field field='died' label='Died'/>\r\n          <Field field='culture' label='Culture'/>\r\n      </ItemDetails>\r\n    );\r\n\r\n    return (\r\n      <RowBlock left={itemList} right={charDetails}/>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport ItemList from '../itemList/itemList';\r\nimport ItemDetails, { Field } from '../itemDetails/itemDetails';\r\nimport ErrorMessage from '../error/error';\r\nimport serviceGOT from '../../services/serviceGOT';\r\nimport RowBlock from '../rowBlock/rowBlock';\r\n\r\n\r\nexport default class HousePage extends React.Component {\r\n\r\n  state = {\r\n    selectedHouse: null,\r\n    error: false\r\n  }\r\n\r\n  gotService = new serviceGOT();\r\n\r\n  onItemSelected = (id) => {\r\n    this.setState({\r\n      selectedHouse: id\r\n    })\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({error: true})\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.error) {\r\n      return <ErrorMessage/>\r\n    }\r\n\r\n    const itemList = (\r\n      <ItemList \r\n        onItemSelected={this.onItemSelected}\r\n        getData={this.gotService.getAllHouses}\r\n        renderItem={({name}) => name}/>\r\n    );\r\n\r\n    const houseDetails = (\r\n      <ItemDetails \r\n        itemId={this.state.selectedHouse}\r\n        getData={this.gotService.getHouse}>\r\n          <Field field='region' label='Region'/>\r\n          <Field field='words' label='Words'/>\r\n          <Field field='titles' label='Titles'/>\r\n          <Field field='overlord' label='Overlord'/>\r\n          <Field field='ancestralWeapons' label='Weapons'/>\r\n      </ItemDetails>\r\n    );\r\n\r\n    return (\r\n      <RowBlock left={itemList} right={houseDetails}/>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport ItemList from '../itemList/itemList';\r\nimport ErrorMessage from '../error/error';\r\nimport serviceGOT from '../../services/serviceGOT';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass BookPage extends React.Component {\r\n  \r\n  state = {\r\n    error: false\r\n  }\r\n\r\n  gotService = new serviceGOT();\r\n\r\n  componentDidCatch() {\r\n    this.setState({error: true})\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.error) {\r\n      return <ErrorMessage/>\r\n    }\r\n\r\n    return (\r\n      <ItemList \r\n        onItemSelected={(itemId) => {\r\n          this.props.history.push(`/books/${itemId}`)\r\n        }}\r\n        getData={this.gotService.getAllBooks}\r\n        renderItem={({name}) => name}/>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(BookPage) ","import React from 'react';\r\nimport ItemDetails, { Field } from '../itemDetails/itemDetails';\r\nimport serviceGOT from '../../services/serviceGOT';\r\n\r\n\r\nexport default class BooksItem extends React.Component {\r\n  gotService = new serviceGOT();\r\n\r\n  render() {\r\n    const {id} = this.props\r\n    return (\r\n      <ItemDetails \r\n        itemId={id}\r\n        getData={this.gotService.getBook}>\r\n          <Field field='numberOfPages' label='Number of page'/>\r\n          <Field field='publiser' label='Publiser'/>\r\n          <Field field='released' label='Released'/>\r\n      </ItemDetails>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\n\r\nimport Header from '../header/header';\r\nimport RandomChar from '../randomChar/randomChar';\r\nimport CharacterPage from '../pages/characterPage';\r\nimport HousePage from '../pages/housePage';\r\nimport BookPage from '../pages/bookPage';\r\nimport BooksItem from '../pages/booksItemPage';\r\n\r\nimport './app.css';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    randomChar: true,\r\n  }\r\n  \r\n  onToggleRandomChar = () => {\r\n    this.setState(({randomChar}) => {\r\n      return {\r\n        randomChar:!randomChar\r\n      }\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    const {randomChar} = this.state;\r\n    const component = (randomChar) ? <RandomChar interval={5000}/> : null;\r\n\r\n    return (\r\n      <Router>\r\n        <div className=\"app\"> \r\n          <div className=\"container\">\r\n            <Header/>\r\n          </div>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-5\">\r\n                {component}\r\n                <button \r\n                  className='btn btn-primary mb-4'\r\n                  onClick={this.onToggleRandomChar}>\r\n                    Toggle random character\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <Route path=\"/characters\" component={CharacterPage}/>\r\n            <Route path=\"/books\" exact={true} component={BookPage}/>\r\n            <Route path=\"/houses\" component={HousePage}/>\r\n            <Route path=\"/books/:id\" render={\r\n              ({match}) => {\r\n                const {id} = match.params\r\n                return <BooksItem id={id}/>\r\n              }\r\n            }/>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/app';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}